[Signals]

$kill -l
: List all the signals type

Higher number signals are so called POSIX real-time signals

[[Signal Types]]

SIGHUP 
------
Number: 1
Default Action: Term
Description: Some daemons interpret this to mean "re-read your configuration file"

When user hung up the connection modem sends a SIGHUP signal

SIGINT
------
Number: 2
Default Action: Term
Description: The signal sent by ^C (Control C) on the terminal

SIGTRAP
------
Number: 5
Default Action: Core
Description: Trace/breakpoint trap

SIGFPE (FPE: Floating Point Exception)
------
Number: 8
Default Action: Core
Description: Arithmetic error, e.g. divide by zero

SIGKILL
------
Number: 9
Default Action: Term
Description: Lethal signal, cannot be caught or ignored.

SIGSEGV (SEGV: Segmentation violation)
------
Number: 11
Default Action: Core
Description: Invalid memory reference 

SIGALRM:
------
Number: 14
Default Action: Term
Description: Expiry of alarm clock timer

SIGTERM: 
------
Number: 15
Default Action: Term
Description: Polite "please terminate" signal

SIGCHLD:
------
Number: 17
Default Action: Ignore
Description: Child process has terminated

Default Action
--------------
If there is no corresponding signal handler:
-- Term: Default action is Terminate the process
-- Core: Default action is Terminate the process as well write a core (which is the memory image of the process at the time)
-- Ignore: Ignore by default

Where Do Signals Come From?
----------------------------
Memory Management
=================
- SIGSEGV
Kernel
======
- SIGPIPE, SIGALRM
Another user process
====================
- SIGUSR1
init
===
- SIGTERM

Child Process
=============
- SIGCHLD

Command Line (kill command)
===========================
- ANY ....
Terminal Driver
===============
- SIGINT, SIGQUIT
The CPU
=======
- SIGILL, SIGBUS


Sending Signals
===============
- using kill system call
e.g., kill(1239, 15);
1239: Target process ID
15: Signal number (or symbolic constant suhc as SIGTERM) Use 0 to test for process existance

kill() will retures:
- 0 on success
- -1 on error

If we send signal 0 , it will test whether target process is actually exist
- Your real or effective UID must match the UID of the target process

Use raise (signum) to send yourself a signal


[Process Termination]
- The default action of most signal types is to terminate the process
-- For some signals a memory image (core file) is also written 
Upper Byte    Lower Byte
--------------------------------
|           |  |                |
|    0      |  |Signal Number   | 
---------------------------------
             /\
              |
              |
              |
              |
        "Core Dumped" flag
        
        
MACRO
=====
WIFSIGNALED (status)
- True if child terminated by signal
WTERMSIG(status)
- The signal number
WCOREDUMP(status)
- True if child produced core dump



